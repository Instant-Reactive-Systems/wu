[package]
name = "wu"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
leptos = { version = "0.6", default-features = false }
leptos-use = { version = "0.10", features = ["math"] }
leptos_meta = { version = "0.6", default-features = false }
leptos_router = { version = "0.6", default-features = false }
gloo-net = { version = "0.5", features = ["http"] }
web-sys = { version = "0.3", features = ["Document", "Element", "NodeList", "EventTarget", "KeyboardEvent"] }

cfg-if = { version = "1.0" }
log = { version = "0.4.17", optional = true }
deref-derive = "0.1"

# dependecies for client (enable when csr or hydrate set)
wasm-bindgen = { version = "0.2" }
console_log = { version = "1", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }

# dependecies for server (enable when ssr set)
leptos_axum = { version = "0.6", optional = true }
axum = { version = "0.7", optional = true }
futures = { version = "0.3", optional = true }
simple_logger = { version = "4.0", optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
tokio = { version = "1.28.1", optional = true, features = ["rt-multi-thread"] }
tracing = { version = "0.1.37", optional = true }

[features]
default = [
	"nightly",
	# "demo",
]
csr = ["leptos/csr", "leptos_router/csr", "leptos_meta/csr", "dep:console_log", "dep:console_error_panic_hook", "dep:log"]
ssr = ["leptos/ssr", "leptos_router/ssr", "leptos_meta/ssr", "leptos-use/ssr", "dep:leptos_axum", "dep:axum", "dep:futures", "dep:simple_logger", "dep:tower", "dep:tower-http", "dep:tokio", "dep:tracing", "dep:log"]
hydrate = ["leptos/hydrate", "leptos_router/hydrate", "leptos_meta/hydrate", "dep:console_log", "dep:console_error_panic_hook", "dep:log"]
nightly = ["leptos/nightly", "leptos_router/nightly", "leptos_meta/nightly"]
demo = []

[profile.release]
codegen-units = 1
lto = true
opt-level = 'z'

[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.cargo-all-features]
denylist = ["axum", "tokio", "tower", "tower-http", "leptos_axum", "tracing", "simple_logger", "futures"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "wu"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/webutils.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]
bin-default-features = true

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]
lib-default-features = true
